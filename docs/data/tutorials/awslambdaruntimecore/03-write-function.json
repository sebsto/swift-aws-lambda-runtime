{"metadata":{"title":"Write your first Lambda function","role":"project","category":"AWS Lambda functions in Swift","categoryPathComponent":"table-of-content"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/awslambdaruntimecore\/03-write-function"]}],"kind":"project","sections":[{"kind":"hero","chapter":"Your first Lambda function in Swift","title":"Write your first Lambda function","estimatedTimeInMinutes":15,"content":[{"inlineContent":[{"type":"text","text":"Learn how to create your project, add dependencies, and create and test your first Lambda function in Swift."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, we will create a Lambda function that receives a text and checks if this text is a palindrome or not."}]},{"type":"paragraph","inlineContent":[{"text":"A palindrome is a word or phrase that reads the same forward and backward.","type":"text"}]}]},{"kind":"tasks","tasks":[{"contentSection":[{"kind":"contentAndMedia","content":[{"inlineContent":[{"text":"Create a new swift project and open Xcode.","type":"text"}],"type":"paragraph"}],"media":"03-01-terminal-package-init.png","mediaPosition":"trailing"}],"title":"Initialize a new project","stepsSection":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Start in your development folder."}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open a Terminal and create a directory for your Lambda function."}]}],"code":"03-01-01-package-init.sh","runtimePreview":null,"caption":[],"media":null,"type":"step"},{"runtimePreview":null,"code":"03-01-02-package-init.sh","media":null,"content":[{"inlineContent":[{"text":"Initialize a new Swift package for an executable target.","type":"text"}],"type":"paragraph"}],"type":"step","caption":[]},{"type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open Xcode in this newly created directory."}]}],"caption":[],"code":"03-01-03-package-init.sh","runtimePreview":null},{"media":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Alternatively, if you use VSCode, use the "},{"code":"code","type":"codeVoice"},{"type":"text","text":" command to open VSCode in your project repository."}]}],"runtimePreview":null,"code":"03-01-04-package-init.sh","caption":[]},{"runtimePreview":null,"media":"03-01-xcode.png","type":"step","caption":[{"type":"paragraph","inlineContent":[{"text":"If you are an iOS developer, you might wonder what is a ","type":"text"},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":". In simple terms, your "},{"type":"codeVoice","code":"Package.swift"},{"text":" defines the dependencies your code has and what products (libraries and\/or executables) your code offers.","type":"text"}]}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In your development environment, expand the project if necessary and open the file "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":"."}]}],"code":null}],"anchor":"Initialize-a-new-project"},{"stepsSection":[{"caption":[{"inlineContent":[{"text":"It defines a package for a project named ","type":"text"},{"code":"Palindrome","type":"codeVoice"},{"text":". The package name only matters when you build a library that is used by other Swift packages.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Comments are important here, do not skip them. They define the minimum version of Swift to use."}]}],"type":"aside","style":"note","name":"Note"}],"type":"step","media":null,"content":[{"inlineContent":[{"type":"text","text":"In the Xcode editor, replace the content of "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":" with the file on the right side of the screen."}],"type":"paragraph"}],"code":"03-02-01-package.swift","runtimePreview":null},{"caption":[{"inlineContent":[{"type":"text","text":"It defines on which Apple platforms the code can be executed. Since Lambda functions are supposed to be run on Linux servers with Amazon Linux 2, it is reasonable to make them run only on macOS, for debugging for example. It does not make sense to run this code on iOS, iPadOS, tvOS, and watchOS."}],"type":"paragraph"}],"code":"03-02-02-package.swift","content":[{"inlineContent":[{"type":"text","text":"Add the "},{"type":"codeVoice","code":"platform"},{"type":"text","text":" section."}],"type":"paragraph"}],"type":"step","media":null,"runtimePreview":null},{"type":"step","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the "},{"code":"dependencies","type":"codeVoice"},{"type":"text","text":" section."}]}],"caption":[{"inlineContent":[{"text":"It defines what external libraries your code depends on. To run code within AWS Lambda you’ll need a runtime that handles the communication with the ","type":"text"},{"type":"reference","identifier":"https:\/\/docs.aws.amazon.com\/lambda\/latest\/dg\/runtimes-api.html","isActive":true},{"type":"text","text":". This is what the "},{"code":"AWSLambdaRuntime","type":"codeVoice"},{"type":"text","text":" is for. You import it by specifying its GitHub url: "},{"type":"codeVoice","code":"https:\/\/github.com\/swift-server\/swift-aws-lambda-runtime.git"},{"type":"text","text":"."}],"type":"paragraph"}],"media":null,"code":"03-02-03-package.swift"},{"type":"step","code":"03-02-04-package.swift","runtimePreview":null,"caption":[{"inlineContent":[{"text":"In the ","type":"text"},{"code":"targets","type":"codeVoice"},{"text":" section you specify your own targets. They are pretty comparable to targets you specify within an Xcode project (that’s probably why they share the name 😎). In our example we only want to create an executable that is called ","type":"text"},{"type":"codeVoice","code":"PalindromeLambda"},{"text":". An executable must have an entrypoint. This can be either a ","type":"text"},{"code":"main.swift","type":"codeVoice"},{"type":"text","text":" or an object that is marked with "},{"type":"codeVoice","code":"@main"},{"text":". For Lambda we will use the ","type":"text"},{"type":"codeVoice","code":"@main"},{"text":" approach.","type":"text"}],"type":"paragraph"}],"media":null,"content":[{"inlineContent":[{"text":"Add the ","type":"text"},{"type":"codeVoice","code":"target"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add the ","type":"text"},{"type":"codeVoice","code":"product"},{"type":"text","text":" section."}]}],"caption":[{"type":"paragraph","inlineContent":[{"text":"To advertise our ","type":"text"},{"type":"codeVoice","code":"executableTarget"},{"text":" as a product of our package, we add it to the ","type":"text"},{"code":"products","type":"codeVoice"},{"text":" section.","type":"text"}]}],"runtimePreview":null,"code":"03-02-05-package.swift","type":"step","media":null}],"title":"Add the project dependencies","contentSection":[{"media":"03-02-swift-package-manager.png","kind":"contentAndMedia","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"text":"Prepare ","type":"text"},{"code":"Package.swift","type":"codeVoice"},{"text":" to define the project targets and dependencies.","type":"text"}]}]}],"anchor":"Add-the-project-dependencies"},{"stepsSection":[{"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Input parameters must conform to the "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" protocol. This ensures that your Lambda function accepts any JSON input."}]},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When your function is triggered by another AWS service, we modeled most of the input and output data format for you. You can add the dependency on "},{"type":"reference","identifier":"https:\/\/github.com\/swift-server\/swift-aws-lambda-events","isActive":true},{"text":" and import ","type":"text"},{"code":"AWSLambdaEvents","type":"codeVoice"},{"type":"text","text":" in your code."}]}]}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open the "},{"type":"codeVoice","code":"main.swift"},{"type":"text","text":" file, remove the code generated and write the code to represent the request sent to your Lambda function."}]}],"code":"03-03-01-main.swift","type":"step","media":null,"runtimePreview":null},{"media":null,"content":[{"inlineContent":[{"type":"text","text":"Write the code to represent the response returned by your Lambda function."}],"type":"paragraph"}],"type":"step","code":"03-03-02-main.swift","runtimePreview":null,"caption":[{"type":"paragraph","inlineContent":[{"text":"Output parameters must conform to the ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":" protocol. This ensures that your Lambda function returns a valid JSON output. Your function might also return ","type":"text"},{"type":"codeVoice","code":"Void"},{"type":"text","text":" if it does not return any value."}]},{"type":"aside","name":"Note","style":"note","content":[{"inlineContent":[{"type":"text","text":"You can also write function that stream a response back to the caller. This is useful when you have a large amount of data to return. See the "},{"isActive":true,"identifier":"https:\/\/github.com\/swift-server\/swift-aws-lambda-runtime\/tree\/main\/Examples\/Streaming","type":"reference"},{"type":"text","text":" for more information."}],"type":"paragraph"}]}]},{"content":[{"inlineContent":[{"text":"Write your business logic.","type":"text"}],"type":"paragraph"}],"caption":[{"inlineContent":[{"type":"text","text":"In real life project, this will be the most complex part of your code. It will live in spearate files or libraries. For this example, we will keep it simple and just return "},{"code":"true","type":"codeVoice"},{"text":" if a ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" is a palindrome."}],"type":"paragraph"}],"media":null,"code":"03-03-03-main.swift","runtimePreview":null,"type":"step"},{"caption":[],"type":"step","media":null,"code":"03-03-04-main.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add an "},{"code":"import","type":"codeVoice"},{"type":"text","text":" statement to import the "},{"type":"codeVoice","code":"AWSLambdaRuntime"},{"type":"text","text":" library."}]}]},{"code":"03-03-05-main.swift","type":"step","content":[{"inlineContent":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"LambdaRuntime"},{"type":"text","text":" struct and add a handler function that will be called by the Lambda runtime."}],"type":"paragraph"}],"caption":[{"inlineContent":[{"type":"text","text":"This function is passed as a closure to the initializer of the "},{"code":"LambdaRuntime","type":"codeVoice"},{"type":"text","text":" struct. It accepts two parameters: the input event and the context. The input event is the JSON payload sent to your Lambda function. The context provides information about the function, such as the function name, memory limit, and log group name. The function returns the output event, which is the JSON payload returned by your Lambda function or Void if your function does not return any value."}],"type":"paragraph"}],"runtimePreview":null,"media":null},{"media":null,"code":"03-03-06-main.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the business logic to the handler function and return the response."}]}],"runtimePreview":null,"caption":[{"inlineContent":[{"text":"In this example, we call the ","type":"text"},{"code":"isPalindrome(_:)","type":"codeVoice"},{"text":" function to check if the input string is a palindrome. Then, we create a response with the result of the check.","type":"text"}],"type":"paragraph"}],"type":"step"},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Start the runtime by calling the "},{"code":"run()","type":"codeVoice"},{"text":" function.","type":"text"}]}],"media":null,"runtimePreview":null,"code":"03-03-07-main.swift","caption":[{"type":"paragraph","inlineContent":[{"text":"This function starts the Lambda runtime and listens for incoming requests. When a request is received, it calls the handler function with the input event and context. The handler function processes the request and returns the output event. The runtime sends the output event back to the caller. This function might ","type":"text"},{"type":"codeVoice","code":"throw"},{"type":"text","text":" an error if the runtime fails to process an event or if the handler function throws an error. This function is asynchronous and does not return until the runtime is stopped."}]}]}],"title":"Write the function code","contentSection":[{"kind":"contentAndMedia","media":"03-03-swift-code-xcode.png","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now that our project structure is ready, let’s write the code of your Lambda function. Perform the following steps in Xcode or another IDE of your choice."}]}],"mediaPosition":"trailing"}],"anchor":"Write-the-function-code"},{"title":"Test Your Code Locally","stepsSection":[{"type":"paragraph","inlineContent":[{"text":"The embedded web server starts only when compiling in ","type":"text"},{"code":"DEBUG","type":"codeVoice"},{"text":" mode and when the code is not run inside a Lambda function environment. You will start the test server directly from Xcode.","type":"text"}]},{"code":null,"type":"step","runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Compile and run your project. Click on the "},{"code":"Run","type":"codeVoice"},{"type":"text","text":" button (▶️) in Xcode."}]}],"media":"03-04-01-compile-run.png"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Verify the server is correctlys started. You should see the following output in the console."}]}],"media":null,"runtimePreview":null,"code":"03-04-02-console-output.sh","type":"step","caption":[]},{"code":"03-04-03-curl.sh","caption":[],"content":[{"inlineContent":[{"text":"Now that the local server started, open a Terminal and use ","type":"text"},{"code":"curl","type":"codeVoice"},{"type":"text","text":" or any other HTTP client to POST your input payload to "},{"code":"127.0.0.1:7000","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"type":"step","media":null,"runtimePreview":null},{"caption":[{"name":"Note","type":"aside","style":"note","content":[{"inlineContent":[{"text":"Do not forget to stop the running scheme in Xcode (⏹️) when you’re done.","type":"text"}],"type":"paragraph"}]}],"type":"step","media":null,"code":"03-04-04-curl.sh","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When you pass "},{"type":"codeVoice","code":"'{\"text\": \"Was it a car or a cat I saw?\"}'"},{"text":", you should receive the response ","type":"text"},{"code":"{\"message\":\"Your text is a palindrome\",\"isPalindrome\":true,\"text\":\"Was it a car or a cat I saw?\"}","type":"codeVoice"}]}],"runtimePreview":null},{"type":"paragraph","inlineContent":[{"text":"Alternatively, you can use the command line from the Terminal.","type":"text"}]},{"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the command "},{"type":"codeVoice","code":"swift run"},{"text":" to start the local embedded web server.","type":"text"}]}],"media":null,"runtimePreview":null,"code":"03-04-06-terminal.sh"},{"type":"step","code":"03-04-07-terminal.sh","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"You should see the following output in the console.","type":"text"}]}],"caption":[],"media":null},{"caption":[{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"Do not forget to stop the local server with "},{"type":"codeVoice","code":"CTRL-C"},{"text":" when you’re done.","type":"text"}],"type":"paragraph"}],"name":"Note"}],"type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now that the local server started, open a second tab in the Terminal and use "},{"code":"curl","type":"codeVoice"},{"type":"text","text":" or any other HTTP client to POST your input payload to "},{"code":"127.0.0.1:7000","type":"codeVoice"},{"type":"text","text":"."}]}],"code":"03-04-03-curl.sh","runtimePreview":null}],"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Before to deploy your Lambda to AWS, you want to ensure that it works on your local machine."}]},{"inlineContent":[{"text":"The ","type":"text"},{"code":"AWSLambdaRuntime","type":"codeVoice"},{"type":"text","text":" embeds a simple web server you can start and use to send your requests to your Lambda function."}],"type":"paragraph"}],"media":"03-04-test-locally.png"}],"anchor":"Test-Your-Code-Locally"}]},{"title":"Deploy your function to AWS Lambda","abstract":[{"text":"Learn how to package your code for AWS Lambda and to deploy it using the AWS Management Console","type":"text"}],"action":{"overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"isActive":true,"identifier":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/04-deploy-function","overridingTitle":"Get started","type":"reference"},"featuredEyebrow":"Tutorial","kind":"callToAction"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/AWSLambdaRuntimeCore\/tutorials\/table-of-content","doc:\/\/AWSLambdaRuntimeCore\/tutorials\/table-of-content\/$volume","doc:\/\/AWSLambdaRuntimeCore\/tutorials\/table-of-content\/Your-first-Lambda-function-in-Swift"]],"reference":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/table-of-content","modules":[{"reference":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/table-of-content\/Before-getting-started","projects":[{"reference":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/01-overview","sections":[]},{"reference":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/02-what-is-lambda","sections":[{"kind":"heading","reference":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/02-what-is-lambda#When-to-use-AWS-Lambda"}]},{"sections":[],"reference":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/03-prerequisites"}]},{"reference":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/table-of-content\/Your-first-Lambda-function-in-Swift","projects":[{"reference":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/03-write-function","sections":[{"kind":"task","reference":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/03-write-function#Initialize-a-new-project"},{"reference":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/03-write-function#Add-the-project-dependencies","kind":"task"},{"reference":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/03-write-function#Write-the-function-code","kind":"task"},{"kind":"task","reference":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/03-write-function#Test-Your-Code-Locally"}]}]},{"reference":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/table-of-content\/Deploy-your-code-to-the-cloud","projects":[{"reference":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/04-deploy-function","sections":[{"reference":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/04-deploy-function#Compile-for-Amazon-Linux","kind":"task"},{"kind":"task","reference":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/04-deploy-function#Create-an-Lambda-Function"},{"reference":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/04-deploy-function#Invoke-your-Lambda-function","kind":"task"}]}]}]},"identifier":{"url":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/03-write-function","interfaceLanguage":"swift"},"references":{"03-01-xcode.png":{"type":"image","alt":"project open in Xcode","variants":[{"url":"\/images\/AWSLambdaRuntimeCore\/03-01-xcode@2x.png","traits":["2x","light"]},{"url":"\/images\/AWSLambdaRuntimeCore\/03-01-xcode~dark@2x.png","traits":["2x","dark"]}],"identifier":"03-01-xcode.png"},"doc://AWSLambdaRuntimeCore/tutorials/AWSLambdaRuntimeCore/03-write-function":{"kind":"project","identifier":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/03-write-function","abstract":[{"type":"text","text":"Learn how to create your project, add dependencies, and create and test your first Lambda function in Swift."}],"title":"Write your first Lambda function","estimatedTime":"15min","url":"\/tutorials\/awslambdaruntimecore\/03-write-function","type":"topic","role":"project"},"https://github.com/swift-server/swift-aws-lambda-runtime/tree/main/Examples/Streaming":{"title":"Lambda Streaming example","url":"https:\/\/github.com\/swift-server\/swift-aws-lambda-runtime\/tree\/main\/Examples\/Streaming","type":"link","identifier":"https:\/\/github.com\/swift-server\/swift-aws-lambda-runtime\/tree\/main\/Examples\/Streaming","titleInlineContent":[{"text":"Lambda Streaming example","type":"text"}]},"03-01-01-package-init.sh":{"fileType":"","content":["# Create a project directory","mkdir Palindrome && cd Palindrome"],"type":"file","fileName":"Commands to type in the Terminal","identifier":"03-01-01-package-init.sh","highlights":[],"syntax":""},"doc://AWSLambdaRuntimeCore/tutorials/AWSLambdaRuntimeCore/03-write-function#Initialize-a-new-project":{"title":"Initialize a new project","type":"section","role":"pseudoSymbol","abstract":[{"text":"Learn how to create your project, add dependencies, and create and test your first Lambda function in Swift.","type":"text"}],"identifier":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/03-write-function#Initialize-a-new-project","kind":"section","url":"\/tutorials\/awslambdaruntimecore\/03-write-function#Initialize-a-new-project"},"doc://AWSLambdaRuntimeCore/tutorials/AWSLambdaRuntimeCore/02-what-is-lambda#When-to-use-AWS-Lambda":{"title":"When to use AWS Lambda","type":"section","role":"pseudoSymbol","abstract":[],"identifier":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/02-what-is-lambda#When-to-use-AWS-Lambda","kind":"section","url":"\/tutorials\/awslambdaruntimecore\/02-what-is-lambda#When-to-use-AWS-Lambda"},"doc://AWSLambdaRuntimeCore/tutorials/AWSLambdaRuntimeCore/03-write-function#Add-the-project-dependencies":{"title":"Add the project dependencies","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Learn how to create your project, add dependencies, and create and test your first Lambda function in Swift."}],"identifier":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/03-write-function#Add-the-project-dependencies","kind":"section","url":"\/tutorials\/awslambdaruntimecore\/03-write-function#Add-the-project-dependencies"},"03-01-03-package-init.sh":{"content":["# Create a project directory","mkdir Palindrome && cd Palindrome","","# create a skeleton project","swift package init --type executable ","","# open Xcode in the current directory","xed ."],"fileName":"Commands to type in the Terminal","type":"file","syntax":"","fileType":"","identifier":"03-01-03-package-init.sh","highlights":[{"line":6},{"line":7},{"line":8}]},"03-04-07-terminal.sh":{"type":"file","identifier":"03-04-07-terminal.sh","fileName":"curl command in a terminal","content":["swift run","","Building for debugging...","[1\/1] Write swift-version--58304C5D6DBC2206.txt","Build of product 'PalindromeLambda' complete! (0.11s)","2025-01-02T15:12:49+0100 info LocalLambdaServer : [AWSLambdaRuntimeCore] LocalLambdaServer started and listening on 127.0.0.1:7000, receiving events on \/invoke"],"syntax":"","highlights":[{"line":2},{"line":3},{"line":4},{"line":5},{"line":6}],"fileType":""},"03-03-02-main.swift":{"syntax":"swift","type":"file","content":["\/\/ the data structure to represent the input parameter","struct Request: Decodable {","    let text: String","}","","\/\/ the data structure to represent the response parameter","struct Response: Encodable {","    let text: String","    let isPalindrome: Bool","    let message: String","}"],"fileName":"main.swift","fileType":"swift","highlights":[{"line":5},{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11}],"identifier":"03-03-02-main.swift"},"doc://AWSLambdaRuntimeCore/tutorials/table-of-content/Your-first-Lambda-function-in-Swift":{"type":"topic","kind":"article","identifier":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/table-of-content\/Your-first-Lambda-function-in-Swift","title":"Your first Lambda function in Swift","url":"\/tutorials\/table-of-content\/your-first-lambda-function-in-swift","abstract":[],"role":"article"},"03-03-06-main.swift":{"highlights":[{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31}],"fileType":"swift","syntax":"swift","type":"file","fileName":"main.swift","content":["import AWSLambdaRuntime","","\/\/ the data structure to represent the input parameter","struct Request: Decodable {","    let text: String","}","","\/\/ the data structure to represent the response parameter","struct Response: Encodable {","    let text: String","    let isPalindrome: Bool","    let message: String","}","","\/\/ the business function","func isPalindrome(_ text: String) -> Bool {","    let cleanedText = text.lowercased().filter { $0.isLetter }","    return cleanedText == String(cleanedText.reversed())","}","","\/\/ the lambda handler function","let runtime = LambdaRuntime {","    (event: Request, context: LambdaContext) -> Response in","","    \/\/ call the business function and return a response","    let result = isPalindrome(event.text)","    return Response(","        text: event.text,","        isPalindrome: result,","        message: \"Your text is \\(result ? \"a\" : \"not a\") palindrome\"","    )","}"],"identifier":"03-03-06-main.swift"},"doc://AWSLambdaRuntimeCore/tutorials/AWSLambdaRuntimeCore/04-deploy-function#Compile-for-Amazon-Linux":{"kind":"section","identifier":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/04-deploy-function#Compile-for-Amazon-Linux","title":"Compile for Amazon Linux","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"Learn how to package your code for AWS Lambda and to deploy it using the AWS Management Console"}],"url":"\/tutorials\/awslambdaruntimecore\/04-deploy-function#Compile-for-Amazon-Linux"},"doc://AWSLambdaRuntimeCore/tutorials/table-of-content/Deploy-your-code-to-the-cloud":{"type":"topic","title":"Deploy your code to the cloud","role":"article","identifier":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/table-of-content\/Deploy-your-code-to-the-cloud","kind":"article","url":"\/tutorials\/table-of-content\/deploy-your-code-to-the-cloud","abstract":[]},"03-02-swift-package-manager.png":{"identifier":"03-02-swift-package-manager.png","type":"image","alt":"Swift Package Manager icon as a box","variants":[{"url":"\/images\/AWSLambdaRuntimeCore\/03-02-swift-package-manager.png","traits":["1x","light"]}]},"03-01-04-package-init.sh":{"highlights":[{"line":9},{"line":10},{"line":11}],"identifier":"03-01-04-package-init.sh","fileName":"Commands to type in the Terminal","syntax":"","type":"file","fileType":"","content":["# Create a project directory","mkdir Palindrome && cd Palindrome","","# create a skeleton project","swift package init --type executable ","","# open Xcode in the current directory","xed .","","# alternatively, you may open VSCode","code ."]},"doc://AWSLambdaRuntimeCore/tutorials/AWSLambdaRuntimeCore/03-write-function#Test-Your-Code-Locally":{"abstract":[{"text":"Learn how to create your project, add dependencies, and create and test your first Lambda function in Swift.","type":"text"}],"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/03-write-function#Test-Your-Code-Locally","title":"Test Your Code Locally","type":"section","url":"\/tutorials\/awslambdaruntimecore\/03-write-function#Test-Your-Code-Locally"},"03-04-01-compile-run.png":{"identifier":"03-04-01-compile-run.png","type":"image","alt":"Compile and run the project","variants":[{"traits":["2x","dark"],"url":"\/images\/AWSLambdaRuntimeCore\/03-04-01-compile-run~dark@2x.png"}]},"03-03-01-main.swift":{"identifier":"03-03-01-main.swift","type":"file","highlights":[],"content":["\/\/ the data structure to represent the input parameter","struct Request: Decodable {","    let text: String","}"],"fileName":"main.swift","syntax":"swift","fileType":"swift"},"doc://AWSLambdaRuntimeCore/tutorials/AWSLambdaRuntimeCore/03-write-function#Write-the-function-code":{"role":"pseudoSymbol","abstract":[{"text":"Learn how to create your project, add dependencies, and create and test your first Lambda function in Swift.","type":"text"}],"type":"section","url":"\/tutorials\/awslambdaruntimecore\/03-write-function#Write-the-function-code","title":"Write the function code","kind":"section","identifier":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/03-write-function#Write-the-function-code"},"03-03-07-main.swift":{"fileType":"swift","identifier":"03-03-07-main.swift","content":["import AWSLambdaRuntime","","\/\/ the data structure to represent the input parameter","struct Request: Decodable {","    let text: String","}","","\/\/ the data structure to represent the response parameter","struct Response: Encodable {","    let text: String","    let isPalindrome: Bool","    let message: String","}","","\/\/ the business function","func isPalindrome(_ text: String) -> Bool {","    let cleanedText = text.lowercased().filter { $0.isLetter }","    return cleanedText == String(cleanedText.reversed())","}","","\/\/ the lambda handler function","let runtime = LambdaRuntime {","    (event: Request, context: LambdaContext) -> Response in","","    \/\/ call the business function and return a response","    let result = isPalindrome(event.text)","    return Response(","        text: event.text,","        isPalindrome: result,","        message: \"Your text is \\(result ? \"a\" : \"not a\") palindrome\"","    )","}","","\/\/ start the runtime","try await runtime.run()"],"fileName":"main.swift","highlights":[{"line":33},{"line":34},{"line":35}],"type":"file","syntax":"swift"},"03-03-04-main.swift":{"syntax":"swift","fileType":"swift","fileName":"main.swift","highlights":[{"line":1},{"line":2}],"type":"file","identifier":"03-03-04-main.swift","content":["import AWSLambdaRuntime","","\/\/ the data structure to represent the input parameter","struct Request: Decodable {","    let text: String","}","","\/\/ the data structure to represent the response parameter","struct Response: Encodable {","    let text: String","    let isPalindrome: Bool","    let message: String","}","","\/\/ the business function","func isPalindrome(_ text: String) -> Bool {","    let cleanedText = text.lowercased().filter { $0.isLetter }","    return cleanedText == String(cleanedText.reversed())","}"]},"03-04-06-terminal.sh":{"type":"file","syntax":"","highlights":[{"line":1}],"fileType":"","fileName":"curl command in a terminal","identifier":"03-04-06-terminal.sh","content":["swift run"]},"03-01-terminal-package-init.png":{"type":"image","identifier":"03-01-terminal-package-init.png","variants":[{"url":"\/images\/AWSLambdaRuntimeCore\/03-01-terminal-package-init.png","traits":["1x","light"]}],"alt":"A Terminal with package init command"},"https://github.com/swift-server/swift-aws-lambda-events":{"type":"link","identifier":"https:\/\/github.com\/swift-server\/swift-aws-lambda-events","titleInlineContent":[{"text":"https:\/\/github.com\/swift-server\/swift-aws-lambda-events","type":"text"}],"title":"https:\/\/github.com\/swift-server\/swift-aws-lambda-events","url":"https:\/\/github.com\/swift-server\/swift-aws-lambda-events"},"03-02-01-package.swift":{"fileType":"swift","syntax":"swift","identifier":"03-02-01-package.swift","content":["\/\/ swift-tools-version:6.0","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Palindrome\"",")"],"highlights":[],"fileName":"Package.swift","type":"file"},"03-04-test-locally.png":{"identifier":"03-04-test-locally.png","variants":[{"url":"\/images\/AWSLambdaRuntimeCore\/03-04-test-locally.png","traits":["1x","light"]}],"alt":"Icons of succeeded and failed tests","type":"image"},"https://docs.aws.amazon.com/lambda/latest/dg/runtimes-api.html":{"url":"https:\/\/docs.aws.amazon.com\/lambda\/latest\/dg\/runtimes-api.html","title":"Lambda Runtime Interface","identifier":"https:\/\/docs.aws.amazon.com\/lambda\/latest\/dg\/runtimes-api.html","titleInlineContent":[{"text":"Lambda Runtime Interface","type":"text"}],"type":"link"},"doc://AWSLambdaRuntimeCore/tutorials/AWSLambdaRuntimeCore/02-what-is-lambda":{"kind":"article","identifier":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/02-what-is-lambda","abstract":[],"title":"What is AWS Lambda","estimatedTime":"3min","url":"\/tutorials\/awslambdaruntimecore\/02-what-is-lambda","type":"topic","role":"article"},"doc://AWSLambdaRuntimeCore/tutorials/AWSLambdaRuntimeCore/01-overview":{"kind":"article","identifier":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/01-overview","abstract":[],"title":"Overview","estimatedTime":"1min","url":"\/tutorials\/awslambdaruntimecore\/01-overview","type":"topic","role":"article"},"doc://AWSLambdaRuntimeCore/tutorials/AWSLambdaRuntimeCore/04-deploy-function":{"type":"topic","estimatedTime":"15min","identifier":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/04-deploy-function","title":"Deploy your function to AWS Lambda","abstract":[{"text":"Learn how to package your code for AWS Lambda and to deploy it using the AWS Management Console","type":"text"}],"kind":"project","role":"project","url":"\/tutorials\/awslambdaruntimecore\/04-deploy-function"},"03-02-04-package.swift":{"syntax":"swift","fileName":"Package.swift","type":"file","fileType":"swift","highlights":[{"line":11},{"line":12},{"line":13}],"identifier":"03-02-04-package.swift","content":["\/\/ swift-tools-version:6.0","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Palindrome\",","    platforms: [","        .macOS(.v15)","    ],","    products: [","        .executable(name: \"PalindromeLambda\", targets: [\"PalindromeLambda\"])","    ],","    dependencies: [","        .package(url: \"https:\/\/github.com\/swift-server\/swift-aws-lambda-runtime.git\", branch: \"main\")","    ]",")"]},"doc://AWSLambdaRuntimeCore/tutorials/AWSLambdaRuntimeCore/04-deploy-function#Create-an-Lambda-Function":{"title":"Create an Lambda Function","type":"section","role":"pseudoSymbol","abstract":[{"text":"Learn how to package your code for AWS Lambda and to deploy it using the AWS Management Console","type":"text"}],"identifier":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/04-deploy-function#Create-an-Lambda-Function","kind":"section","url":"\/tutorials\/awslambdaruntimecore\/04-deploy-function#Create-an-Lambda-Function"},"doc://AWSLambdaRuntimeCore/tutorials/table-of-content":{"type":"topic","identifier":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/table-of-content","title":"Your First Lambda Function Written in Swift","abstract":[{"type":"text","text":"A step-by-step tutorial to learn how to implement, build, test, and deploy your first Lambda function written in Swift."}],"kind":"overview","role":"overview","url":"\/tutorials\/table-of-content"},"03-02-02-package.swift":{"fileName":"Package.swift","content":["\/\/ swift-tools-version:6.0","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Palindrome\",","    platforms: [","        .macOS(.v15)","    ]",")"],"type":"file","identifier":"03-02-02-package.swift","highlights":[{"line":7},{"line":8},{"line":9},{"line":10}],"syntax":"swift","fileType":"swift"},"03-04-04-curl.sh":{"fileName":"curl command in a terminal","syntax":"","content":["curl --header \"Content-Type: application\/json\"          \\","     --request POST                                     \\","     --data '{\"text\": \"Was it a car or a cat I saw?\"}'  \\","     http:\/\/127.0.0.1:7000\/invoke","","{\"message\":\"Your text is a palindrome\",\"isPalindrome\":true,\"text\":\"Was it a car or a cat I saw?\"}",""],"highlights":[{"line":6},{"line":7}],"type":"file","fileType":"","identifier":"03-04-04-curl.sh"},"03-04-02-console-output.sh":{"highlights":[],"content":["2025-01-02T14:59:29+0100 info LocalLambdaServer : [AWSLambdaRuntimeCore] ","LocalLambdaServer started and listening on 127.0.0.1:7000, receiving events on \/invoke"],"fileName":"Console output","identifier":"03-04-02-console-output.sh","fileType":"","type":"file","syntax":""},"03-03-03-main.swift":{"syntax":"swift","fileName":"main.swift","type":"file","content":["\/\/ the data structure to represent the input parameter","struct Request: Decodable {","    let text: String","}","","\/\/ the data structure to represent the response parameter","struct Response: Encodable {","    let text: String","    let isPalindrome: Bool","    let message: String","}","","\/\/ the business function","func isPalindrome(_ text: String) -> Bool {","    let cleanedText = text.lowercased().filter { $0.isLetter }","    return cleanedText == String(cleanedText.reversed())","}"],"highlights":[{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17}],"identifier":"03-03-03-main.swift","fileType":"swift"},"doc://AWSLambdaRuntimeCore/tutorials/AWSLambdaRuntimeCore/03-prerequisites":{"type":"topic","estimatedTime":"3min","identifier":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/03-prerequisites","title":"Prerequisites","abstract":[],"kind":"article","role":"article","url":"\/tutorials\/awslambdaruntimecore\/03-prerequisites"},"03-01-02-package-init.sh":{"fileType":"","fileName":"Commands to type in the Terminal","content":["# Create a project directory","mkdir Palindrome && cd Palindrome","","# create a skeleton project","swift package init --type executable "],"syntax":"","identifier":"03-01-02-package-init.sh","type":"file","highlights":[{"line":3},{"line":4},{"line":5}]},"03-02-05-package.swift":{"syntax":"swift","fileName":"Package.swift","type":"file","content":["\/\/ swift-tools-version:6.0","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Palindrome\",","    platforms: [","        .macOS(.v15)","    ],","    products: [","        .executable(name: \"PalindromeLambda\", targets: [\"PalindromeLambda\"])","    ],","    dependencies: [","        .package(url: \"https:\/\/github.com\/swift-server\/swift-aws-lambda-runtime.git\", branch: \"main\")","    ],","    targets: [","        .executableTarget(","            name: \"PalindromeLambda\",","            dependencies: [","                .product(name: \"AWSLambdaRuntime\", package: \"swift-aws-lambda-runtime\")","            ],","            path: \"Sources\"","        )","    ]",")"],"identifier":"03-02-05-package.swift","fileType":"swift","highlights":[{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24}]},"03-03-swift-code-xcode.png":{"type":"image","identifier":"03-03-swift-code-xcode.png","alt":"Swift code in Xcode","variants":[{"url":"\/images\/AWSLambdaRuntimeCore\/03-03-swift-code-xcode.png","traits":["1x","light"]}]},"03-03-05-main.swift":{"identifier":"03-03-05-main.swift","content":["import AWSLambdaRuntime","","\/\/ the data structure to represent the input parameter","struct Request: Decodable {","    let text: String","}","","\/\/ the data structure to represent the response parameter","struct Response: Encodable {","    let text: String","    let isPalindrome: Bool","    let message: String","}","","\/\/ the business function","func isPalindrome(_ text: String) -> Bool {","    let cleanedText = text.lowercased().filter { $0.isLetter }","    return cleanedText == String(cleanedText.reversed())","}","","\/\/ the lambda handler function","let runtime = LambdaRuntime {","    (event: Request, context: LambdaContext) -> Response in","","}"],"type":"file","fileName":"main.swift","syntax":"swift","fileType":"swift","highlights":[{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25}]},"03-04-03-curl.sh":{"content":["curl --header \"Content-Type: application\/json\"          \\","     --request POST                                     \\","     --data '{\"text\": \"Was it a car or a cat I saw?\"}'  \\","     http:\/\/127.0.0.1:7000\/invoke",""],"type":"file","identifier":"03-04-03-curl.sh","fileName":"curl command in a terminal","fileType":"","syntax":"","highlights":[{"line":1},{"line":2},{"line":3},{"line":4}]},"03-02-03-package.swift":{"content":["\/\/ swift-tools-version:6.0","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Palindrome\",","    platforms: [","        .macOS(.v15)","    ],","    dependencies: [","        .package(url: \"https:\/\/github.com\/swift-server\/swift-aws-lambda-runtime.git\", branch: \"main\")","    ]",")"],"identifier":"03-02-03-package.swift","highlights":[{"line":10},{"line":11},{"line":12}],"fileName":"Package.swift","type":"file","fileType":"swift","syntax":"swift"},"doc://AWSLambdaRuntimeCore/tutorials/table-of-content/Before-getting-started":{"title":"Before getting started","role":"article","identifier":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/table-of-content\/Before-getting-started","kind":"article","abstract":[],"url":"\/tutorials\/table-of-content\/before-getting-started","type":"topic"},"doc://AWSLambdaRuntimeCore/tutorials/AWSLambdaRuntimeCore/04-deploy-function#Invoke-your-Lambda-function":{"title":"Invoke your Lambda function","type":"section","role":"pseudoSymbol","abstract":[{"text":"Learn how to package your code for AWS Lambda and to deploy it using the AWS Management Console","type":"text"}],"identifier":"doc:\/\/AWSLambdaRuntimeCore\/tutorials\/AWSLambdaRuntimeCore\/04-deploy-function#Invoke-your-Lambda-function","kind":"section","url":"\/tutorials\/awslambdaruntimecore\/04-deploy-function#Invoke-your-Lambda-function"}}}